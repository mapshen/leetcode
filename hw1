// "static void main" must be defined in a public class.
public class Solution {
    public boolean search(int[] nums, int target) {
        int high = nums.length - 1;
        int low = 0;
        int mid;
        while(high>=low){
            mid=(high+low)/2;
            if (nums[mid] == target) {
                return true;
            }
            else if (nums[mid] < nums[low]) {
                if (target < nums[mid]) {
                    high = mid - 1;
                } else if (target > nums[high]) {
                    high = mid - 1;
                } else {
                    low = mid + 1;
                }
            }
            else if(nums[mid] == nums[low]){
                if(nums[high]>nums[mid]){
                    low = mid + 1;                        
                }
                else if (nums[high] == nums[mid]){
                    if(high<=mid+1 && low>=mid-1){
                        high = low - 1;
                    }
                    else if (high <= mid+1){
                        high = mid -1;
                    }
                    else if (low >= mid-1){
                        low = mid + 1;
                    }
                    else{
                        int[] subnum1 = new int[mid-low-1];
                        for (int i=0;i<mid-low-1;i++){
                            subnum1[i] = nums[low+i+1]; 
                        }
                        int[] subnum2 = new int[high-mid-1];
                        for (int i=0;i<high-mid-1;i++){
                            subnum2[i] = nums[mid+i+1]; 
                        }
                        if(search(subnum1, target)==true || search(subnum2,target)==true){
                            return true;
                        }
                        else {return false;}
                    }
                }
                else{
                    low = mid + 1;
                }
            }
            else{
                if(target > nums[mid]){
                    low = mid+1;
                }
                else if(target < nums[low]){
                    low = mid+1;
                }
                else{
                    high = mid-1;
                }
            }
        }
        return false;
    }

}



